Find the Missing Number

    Difficulty Level : Easy
    Last Updated : 31 Aug, 2022

Read
Discuss

Given an array arr[] of size N-1 with integers in the range of [1, N], the task is to find the missing number from the first N integers.

Note: There are no duplicates in the list.

Examples: 

    Input: arr[] = {1, 2, 4, 6, 3, 7, 8}, N = 8
    Output: 5
    Explanation: The missing number between 1 to 8 is 5
Approach 1 (Using Hashing): The idea behind the following approach is

    The numbers will be in the range (1, N), an array of size N can be maintained to keep record of the elements present in the given array

    Create a temp array temp[] of size n + 1 with all initial values as 0.
    Traverse the input array arr[], and do following for each arr[i] 
        if(temp[arr[i]] == 0) temp[arr[i]] = 1
    Traverse temp[] and output the array element having value as 0 (This is the missing element).

Below is the implementation of the above approach:

// Java code to implement the approach
import java.io.*;
import java.util.*;
 
class GFG {
 
    // Function to find the missing number
    public static void findMissing(int arr[], int N)
    {
        int i;
        int temp[] = new int[N + 1];
        for (i = 0; i <= N; i++) {
            temp[i] = 0;
        }
 
        for (i = 0; i < N; i++) {
            temp[arr[i] - 1] = 1;
        }
 
        int ans = 0;
        for (i = 0; i <= N; i++) {
            if (temp[i] == 0)
                ans = i + 1;
        }
        System.out.println(ans);
    }
    // Driver Code
    public static void main(String[] args)
    {
        int arr[] = { 1, 3, 7, 5, 6, 2 };
        int n = arr.length;
 
        // Function call
        findMissing(arr, n);
    }
}
Output

4

Time Complexity: O(N)
Auxiliary Space: O(N)

Approach 2 (Using summation of first N natural numbers): The idea behind the approach is to use the summation of the first N numbers.

    Find the sum of the numbers in the range [1, N] using the formula N * (N+1)/2. Now find the sum of all the elements in the array and subtract it from the sum of the first N natural numbers. This will give the value of the missing element.

Follow the steps mentioned below to implement the idea:

    Calculate the sum of the first N natural numbers as sumtotal= N*(N+1)/2.
    Traverse the array from start to end.
        Find the sum of all the array elements.
    Print the missing number as SumTotal â€“ sum of array

Below is the implementation of the above approach:

// Java program to find missing Number
 
import java.util.*;
import java.util.Arrays;
 
class GFG {
 
    // Function to find the missing number
    public static int getMissingNo(int[] nums, int n)
    {
        int sum = ((n + 1) * (n + 2)) / 2;
        for (int i = 0; i < n; i++)
            sum -= nums[i];
        return sum;
    }
 
    // Driver code
    public static void main(String[] args)
    {
        int[] arr = { 1, 2, 3, 5 };
        int N = arr.length;
        System.out.println(getMissingNo(arr, N));
    }
}
Output

4

Time Complexity: O(N)
Auxiliary Space: O(1)