Stack

https://www.codesdope.com/course/data-structures-stacks/

https://iq.opengenus.org/implement-stack-using-array-and-linked-list/

It is a linear data structure that follows a particular order in which the operations are performed.

https://practice.geeksforgeeks.org/problems/implement-stack-using-array/1?category%5B%5D=Stack&category%5B%5D=Stack&page=1&query=category%5B%5DStackpage1category%5B%5DStack

LIFO( Last In First Out ):



This strategy states that the element that is inserted last will come out first. You can take a pile of plates kept on top of each other as a real-life example. The plate which we put last is on the top and since we remove the plate that is at the top, we can say that the plate that was put last comes out first. 



Basic Operations on Stack
In order to make manipulations in a stack, there are certain operations provided to us.

push() to insert an element into the stack
pop() to remove an element from the stack
top() Returns the top element of the stack.
isEmpty() returns true is stack is empty else false
size() returns the size of stack

Push: 
Adds an item to the stack. If the stack is full, then it is said to be an Overflow condition.

Algorithm for push:

begin
 if stack is full
    return
 endif
else  
 increment top
 stack[top] assign value
end else
end procedure
Pop:
Removes an item from the stack. The items are popped in the reversed order in which they are pushed. If the stack is empty, then it is said to be an Underflow condition.

Algorithm for pop:

begin
 if stack is empty
    return
 endif
else
 store value of stack[top]
 decrement top
 return value
end else
end procedure
Top:

https://practice.geeksforgeeks.org/problems/implement-stack-using-array/1?category%5B%5D=Stack&category%5B%5D=Stack&page=1&query=category%5B%5DStackpage1category%5B%5DStack