Find Max 3 elements from array. Without sorting the arr. 

☯️
Arr = {-24,-99 9,-6,-42,-47,, 88,-91}
// 88,9,-6.

Given an n x n matrix and a number x, find the position of x in the matrix if it is present in it. 
Otherwise, print “Not Found”. 
In the given matrix, every row and column is sorted in increasing order. 
The designed algorithm should have linear time complexity (Big-O complexity O(N)).
Input: mat[4][4] = { {10, 20, 30, 40},
{15, 25, 35, 45},
{27, 29, 37, 48},
{32, 33, 39, 50}};
x = 29
Output: Found at (2, 1)

WAP to find nth occurrence of element in array  

   Fibonacci series 15 elements.

     [ 1, 45, 5 ,7, 9 , 5]
         [ 2,1,5,6,1,9 ]
         Find only unique elements from these 2 arary .
         Output: [2, 6, 7, 45], 

1)Given an integer array Arr[] and  number N ,
 you need to write a program to find it a pair of elements
exits in the array whose difference is N

int arr[] = {90,50,20,80,70}
int N =20
o/p 90,70 || 70,50

2)Arrays, 

Subarray with given sum 
int S=12
int A[]=1 2 3 7 51

Check if a string is palindrome or not
2. Find mid point of linked list
3. Implement a stack

Implement the MyStack class:

void push(int x) Pushes element x to the top of the stack.
int pop() Removes the element on the top of the stack and returns it.
int top() Returns the element on the top of the stack.
boolean empty() Returns true if the stack is empty, false otherwise.
Notes:

You must use only standard operations of a queue, which means that only push to back, peek/pop from front, size and is empty operations are valid.
Depending on your language, the queue may not be supported natively. You may simulate a queue using a list or deque (double-ended queue) as long as you use only a queue's standard operations.

1.binary search  2.Merge Sort  3.insertion sort  4.https://leetcode.com/problems/best-time-to-buy-and-sell-stock/

Q1) array : 10,12,10,12,11,13,14
k=2
find all the elements whose frequency is same as k
output : 10,12

q2) array consist of 0,1 and 2 only

arr : 0,1,1,2,2,1,1,0,0,2,1

sort the array

output : 0,0,0,1,1,1,1,1,2,2,2

Q3) arr : 10,12,15,13,14
sum = 27

find pairs whose sum is same as sum

output : 12,15

What is Hash Table?
What is Hashing?
What is complexity of Hash Table?
what is a Hash Function?
difference between Hashing and Hash Tables?
example of Hash Function
What is Arrays, Advantages and limitations 
Default Array Values
find and remove duplicate elements.
time complexity
Median of two sorted arrays of same size
Move all zeroes to end of array

if (j >= n)
      return;
   if (n-j > 0 && n-j >= j)
       printf("%d %dn", j, n-j);
   print(n, j+1);
}
 
int main()
{
    int n = 8;
    print(n, 1);
}
5. 
Rotate an array by d places.

[1, 2, 3, 4, 5, 6, 7], d = 2, n =7

[3, 4, 5, 6, 7, 1, 2]

Code 1: Sort the array in a way all odd numbers came first in ascending order and all even numbers came in descending order.
Input: {1 6 2 7 3 9 8 4}
Output: {1 3 7 9 8 6 4 2}

Code 2: Find the maximum repeated element from the array, if multiple element have the same high-frequency return a big number.
Input: {1 6 4 2 7 4 2 3 9 2 8 4}
Output: 4

merge sort, quick sort, chck an array sorted or not sorted, find peek elemnt in an array, rotate an matrix clockwise


earch nth occurance of element in an array 
Input 
10
2 4 3 5 7 9 4 3 7 2
Element to search 4
Occurance 2 
Output 
6                                                                                                                                                                                                                                                                       Sample input / outputs of this program, Array = {5, 6, 2, 5, 9, 6, 5}

Enter element to search: 8
8 not found.

Enter element to search: 5
Enter times of occurrence of element: 3
5 found 3 times at 7 position

Kth Smallest Element in a Sorted Matrix:
Given an n x n matrix where each of the rows and columns is sorted in ascending order, return the kth smallest element in the matrix.
Note that it is the kth smallest element in the sorted order, not the kth distinct element.
You must find a solution with a memory complexity better than O(n2).
Example 1:
Input: matrix = [[1,5,9],[10,11,13],[12,13,15]], k = 8
Output: 13
Explanation: The elements in the matrix are [1,5,9,10,11,12,13,13,15], and the 8th smallest number is 13

Kth Smallest Element in a Sorted Matrix:
Given an n x n matrix where each of the rows and columns is sorted in ascending order, return the kth smallest element in the matrix.
Note that it is the kth smallest element in the sorted order, not the kth distinct element.
You must find a solution with a memory complexity better than O(n2).
Example 1:////////////////////////////////
Output: 13
Explanation: The elements in the matrix are [1,5,9,10,11,12,13,13,15], and the 8th smallest number is 13//////////////////////////////////////////////
